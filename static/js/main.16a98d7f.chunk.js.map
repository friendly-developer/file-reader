{"version":3,"sources":["components/FileUpload.js","components/OutputForm.js","components/OutputTable.js","utils/OutputTableUtils.js","components/Output.js","components/Dashboard.js","components/App.js","index.js"],"names":["FileUpload","onUpload","useState","file","setFile","inputRef","useRef","className","onClick","current","click","required","ref","type","accept","onChange","e","uploadedFile","target","files","name","fileReader","FileReader","readAsText","onload","console","error","hidden","OutputForm","onUpdate","delimiter","setDelimiter","lines","setLines","useEffect","value","stopPropagation","OutputTable","rowsData","formData","fileData","processedData","Object","keys","length","modifiedRows","split","map","row","updatedRow","processData","convertedRows","r","Output","data","setFormData","Dashboard","fileContents","setFileContents","contents","result","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16a98d7f.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\n\nconst FileUpload = ({ onUpload }) => {\n  const [file, setFile] = useState(null);\n  const inputRef = useRef(null);\n  const triggerFileUpload = () => {\n    inputRef.current.click();\n  };\n  const readFile = (e) => {\n    const uploadedFile = e.target.files[0];\n    if (!uploadedFile || uploadedFile.type !== \"text/plain\") {\n      console.error(\"Invalid file selected\");\n      return;\n    }\n    setFile(uploadedFile.name);\n    const fileReader = new FileReader();\n    fileReader.readAsText(uploadedFile);\n    fileReader.onload = onUpload;\n  };\n  return (\n    <div className=\"ui grid\">\n      <div className=\"four wide column\">Choose the file to upload</div>\n      <div className=\"three wide column\">\n        <button className=\"ui primary button\" onClick={triggerFileUpload}>\n          Upload File\n        </button>\n        <input\n          required\n          ref={inputRef}\n          type=\"file\"\n          accept=\".txt\"\n          onChange={readFile}\n          hidden\n        ></input>\n        {file}\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload;\n","import React, { useState, useEffect } from \"react\";\n\nconst OutputForm = ({ onUpdate }) => {\n  const [delimiter, setDelimiter] = useState(\"|\");\n  const [lines, setLines] = useState(\"2\");\n\n  const handleDelimiterChange = (e) => {\n    e.stopPropagation();\n    setDelimiter(e.target.value);\n  };\n  const handleLinesChange = (e) => {\n    e.stopPropagation();\n    setLines(e.target.value);\n  };\n\n  useEffect(() => {\n    onUpdate(delimiter, lines);\n  });\n\n  return (\n    <div className=\"ui grid\">\n      <div className=\"four wide column\">\n        <div className=\"ui labeled input\">\n          <div className=\"ui label\">Delimiter</div>\n          <input\n            type=\"text\"\n            value={delimiter}\n            onChange={handleDelimiterChange}\n          />\n        </div>\n      </div>\n      <div className=\"four wide column\">\n        <div className=\"ui labeled input\">\n          <div className=\"ui label\">Lines</div>\n          <input type=\"number\" value={lines} onChange={handleLinesChange} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OutputForm;\n","import React from \"react\";\nimport { processData } from \"../utils/OutputTableUtils\";\n\nconst OutputTable = ({ formData, fileData }) => {\n  let processedData = [];\n\n  const generateTable = (rowsData) => {\n    if (rowsData.length === 0) {\n      return (\n        <div className=\"ui segment\">\n          No results to display! Select a different file or modify the filters.\n        </div>\n      );\n    }\n    return rowsData.map((row) => {\n      const convertedRows = row.map((r) => (\n        <div key={r} className=\"ui segment\">\n          {r}\n        </div>\n      ));\n      return (\n        <div key={row[0]} className=\"ui horizontal segments\">\n          {convertedRows}\n        </div>\n      );\n    });\n  };\n\n  if (Object.keys(formData).length > 0 && fileData) {\n    processedData = processData(formData, fileData);\n  }\n\n  return <div className=\"ui segments\">{generateTable(processedData)}</div>;\n};\n\nexport default OutputTable;\n","export const processData = (formData, fileData) => {\n  const rows = fileData.split(\"\\n\");\n  const modifiedRows = rows.map((row) => {\n    const updatedRow = row.split(formData.delimiter);\n    if (updatedRow.length > 4) {\n      updatedRow.length = 4;\n    }\n    return updatedRow;\n  });\n\n  if (modifiedRows.length > formData.lines) {\n    modifiedRows.length = formData.lines;\n  }\n\n  return modifiedRows;\n};\n","import React, { useState } from \"react\";\nimport OutputForm from \"./OutputForm\";\nimport OutputTable from \"./OutputTable\";\n\nconst Output = ({ data }) => {\n  const [formData, setFormData] = useState({});\n  const onFormUpdate = (delimiter, lines) => {\n    if (delimiter !== formData.delimiter || lines !== formData.lines)\n      setFormData({ delimiter, lines });\n  };\n  return (\n    <>\n      <OutputForm onUpdate={onFormUpdate} />\n      {data && <OutputTable formData={formData} fileData={data} />}\n    </>\n  );\n};\n\nexport default Output;\n","import React, { useState } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport Output from \"./Output\";\n\nconst Dashboard = () => {\n  const [fileContents, setFileContents] = useState(null);\n  const onUpload = (e) => {\n    let contents = e.target.result;\n    setFileContents(contents);\n  };\n  return (\n    <div className=\"ui container\">\n      <h1 className=\"ui header\">File Reader</h1>\n\n      <div>\n        <FileUpload onUpload={onUpload} />\n        <Output data={fileContents} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport Dashboard from \"./Dashboard\";\n\nconst App = () => {\n  return (\n    <div>\n      <Dashboard />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}